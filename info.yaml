---
# TinyTapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here.
# Source files must be in ./src and you must list each source file separately
  source_files:
    - tt_um_jminz_uart.v
    - testbench.v
    - transmitter.v
    - receiver.v
  top_module:  "tt_um_jminz_uart"      # put the name of your top module here, make it unique by prepending your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation:
  author:       "JM"
  title:        "uart"
  language:     "Verilog"
  description:  "A simple UART RX TX"

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      Requires a 50MHz input clock that gets divided into clock enables for a 16x oversampling receiver clock enable and 115200 baud transmission clock enable.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      After reset, data=1 will be feed in and it will be transmitted to receiver and the data increment by 1 till reach 0xFF

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:
    - din_00
    - din_01
    - din_02
    - din_03
    - din_04
    - din_05
    - din_06
    - din_07
    - wr_en
    - clk_50m
    - rx
    - rdy_clr
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - dout_00
    - dout_01
    - dout_02
    - dout_03
    - dout_04
    - dout_05
    - dout_06
    - dout_07
    - tx
    - tx_busy
    - rdy
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - temp_00
    - temp_01

# The following fields are optional
  tag:          "timer, test"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     50000000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository